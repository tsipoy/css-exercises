* {
/*
  Property name
  Property description
*/
  /* Property example with a value */
}

/*
  Questions
  =======================

  - What is the difference between `opacity` and a `background-color` that is semi-transparent?
  - What is the difference between `display: none;` and `visibility: hidden;`?
  - Why would we use `visibility: visible;`?

*/

/* opacity
  Opacity property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.
*/
/* Example */
.opacity {
  opacity: 0;
}

/* display
  Display property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex. Formally, the display property sets an element's inner and outer display types.
*/
/* Example */
.display {
  display: flex;
}

/* visibility
  Visibility property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a <table> .
*/
/* Example */
.visibility {
  visibility: visible;
}


/* Differance between background-color and opacity:
  Opacity applies with its child but the background applies with all elements.
*/

/* Differance between display: none; and visibility: hidden;

  -The element box is invisible (not drawn), but still affects layout as normal. Descendants of the element will be visible if they have visibility set to visible. The element cannot receive focus (such as when navigating through tab indexes).

  -Using a display value of none on an element will remove it from the accessibility tree. This will cause the element and all its descendant elements to no longer be announced by screen reading technology.
*/

/* We ues visibility: visible; because when we use collapse, collapsed flex items are hidden, and the space they would have occupied is removed but, descendants of the element will be visible if they have visibility set to visible.


